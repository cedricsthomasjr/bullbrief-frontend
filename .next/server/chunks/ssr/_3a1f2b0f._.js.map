{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/cjthomas/Desktop/CSPersonal/bullbrief/bullbrief-frontend/app/summary/%5Bticker%5D/metric/%5Bmetric%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState, useRef } from \"react\";\nimport { useParams } from \"next/navigation\";\nimport MetricChart from \"@/bullbrief-frontend/app/components/MetricChart\";\nimport LoadingScreen from \"@/bullbrief-frontend/app/components/LoadingScreen\";\n\nexport default function MetricDetailPage() {\n  const { ticker, metric } = useParams() as { ticker: string; metric: string };\n  const [aiSummary, setAiSummary] = useState<string | null>(null);\n  const [data, setData] = useState<{ year: number; value: number }[] | null>(null);\n  const lastGoodData = useRef<{ year: number; value: number }[] | null>(null);\n  const [dataLoading, setDataLoading] = useState(true);\n  const [summaryLoading, setSummaryLoading] = useState(true);\n  const bulletPoints = aiSummary\n  ?.split(\"\\n\")\n  .filter((line) => line.trim().startsWith(\"-\"))\n  .map((line) => line.replace(/^- /, \"\").trim());\n\n  useEffect(() => {\n    if (!ticker || !metric) return;\n  \n    const fetchData = async () => {\n      setDataLoading(true);\n      try {\n        const endpoint =\n          [\"eps\", \"revenue\"].includes(metric.toLowerCase())\n            ? `http://localhost:8000/metric/${ticker}/${metric}` // <â€” use new clean route\n            : `http://localhost:8000/macrotrends/${ticker}`;\n  \n        const res = await fetch(endpoint);\n        const json = await res.json();\n  \n        let extractedData = null;\n  \n        if ([\"eps\", \"revenue\"].includes(metric.toLowerCase())) {\n          extractedData = json.data;\n        } else {\n          const metricKey = Object.keys(json.data).find(\n            (k) => k.toLowerCase() === metric.toLowerCase()\n          );\n          extractedData = metricKey && Array.isArray(json.data[metricKey])\n            ? json.data[metricKey]\n            : null;\n        }\n  \n        if (extractedData) {\n          lastGoodData.current = extractedData;\n          setData(extractedData);\n        } else {\n          setData(lastGoodData.current);\n        }\n      } catch (e) {\n        console.error(\"Failed to fetch metric data:\", e);\n        setData(lastGoodData.current);\n      } finally {\n        setDataLoading(false);\n      }\n    };\n  \n    fetchData();\n  }, [ticker, metric]);\n  \n\n  useEffect(() => {\n    if (!ticker || !metric) return;\n\n    const fetchAISummary = async () => {\n      setSummaryLoading(true);\n      try {\n        const res = await fetch(`http://localhost:8000/interpret/${ticker}?metric=${metric}`);\n        const json = await res.json();\n        setAiSummary(json.analysis ?? null);\n      } catch (err) {\n        setAiSummary(null);\n      } finally {\n        setSummaryLoading(false);\n      }\n    };\n\n    fetchAISummary();\n  }, [ticker, metric]);\n\n  if (dataLoading) return <LoadingScreen />;\n\n  return (\n<div className=\"max-w-5xl mx-auto px-6 pt-24 pb-12 text-white space-y-10\">\n  <h1 className=\"text-4xl font-bold capitalize tracking-tight\">\n    {metric} â€“ {ticker}\n  </h1>\n\n  {/* Chart Section */}\n  <section className=\"space-y-6\">\n    <MetricChart data={data} title={metric} />\n  </section>\n\n  {/* AI Interpretation Section */}\n  <section className=\"space-y-6\">\n    <h2 className=\"text-2xl font-semibold text-white tracking-tight\">ðŸ§  AI Interpretation</h2>\n\n    {summaryLoading ? (\n      <p className=\"text-gray-500 italic animate-pulse\">Generating summary...</p>\n    ) : bulletPoints && bulletPoints.length > 0 ? (\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n        {bulletPoints.map((point, idx) => {\n          const [title, ...rest] = point.split(\":\");\n          return (\n            <div key={idx} className=\"bg-zinc-900 border border-zinc-700 p-5 rounded-xl shadow hover:shadow-md transition\">\n              <p className=\"text-blue-400 font-semibold mb-1\">{title}</p>\n              <p className=\"text-gray-300 text-sm leading-relaxed\">{rest.join(\":\").trim()}</p>\n            </div>\n          );\n        })}\n      </div>\n    ) : (\n      <p className=\"text-red-500 italic\">Could not generate summary.</p>\n    )}\n  </section>\n</div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///Users/cjthomas/Desktop/CSPersonal/bullbrief/bullbrief-frontend/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}